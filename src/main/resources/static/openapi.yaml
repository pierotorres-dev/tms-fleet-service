openapi: 3.0.3
info:
  title: Fleet Service API
  description: API para gestión de equipos, observaciones y catálogos del sistema de flota
  version: 1.0.0
  contact:
    name: DLirio Tech
servers:
  - url: /
    description: Servidor local
tags:
  - name: Catálogos
    description: Operaciones con catálogos del sistema
  - name: Equipos
    description: Operaciones con equipos
  - name: Observaciones
    description: Operaciones con observaciones de equipos
  - name: Tipos de Equipos
    description: Operaciones con tipos de equipos y esquemas
paths:
  /api/v1/catalogos/tipo-observacion-neumatico:
    get:
      tags:
        - Catálogos
      summary: Obtiene todos los tipos de observación de neumático
      operationId: getAllTipoObservacionNeumatico
      responses:
        '200':
          description: Lista de tipos de observación de neumático
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoObservacionResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/catalogos/tipo-observacion-equipo:
    get:
      tags:
        - Catálogos
      summary: Obtiene todos los tipos de observación de equipos
      operationId: getAllTipoObservacionEquipo
      responses:
        '200':
          description: Lista de tipos de observación de equipos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoObservacionResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/catalogos/estado-observacion:
    get:
      tags:
        - Catálogos
      summary: Obtiene todos los estados de observación
      operationId: getAllEstadoObservacion
      responses:
        '200':
          description: Lista de estados de observación
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EstadoObservacionResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/catalogos/estado-equipo:
    get:
      tags:
        - Catálogos
      summary: Obtiene todos los estados de equipo
      operationId: getAllEstadoEquipo
      responses:
        '200':
          description: Lista de estados de equipo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EstadoEquipoResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/equipos/empresa/{empresaId}:
    get:
      tags:
        - Equipos
      summary: Obtiene todos los equipos por empresa
      operationId: getAllEquiposByEmpresaId
      parameters:
        - name: empresaId
          in: path
          description: ID de la empresa
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de equipos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EquipoResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/equipos/{id}:
    get:
      tags:
        - Equipos
      summary: Obtiene un equipo por su ID
      operationId: getEquipoById
      parameters:
        - name: id
          in: path
          description: ID del equipo
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Equipo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipoResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/equipos/{id}/configuracion:
    patch:
      tags:
        - Equipos
      summary: Actualiza la configuración de un equipo existente
      operationId: updateEquipo
      parameters:
        - name: id
          in: path
          description: ID del equipo
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Datos de configuración del equipo a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipoUpdateRequest'
      responses:
        '200':
          description: Equipo actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipoResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/equipos/{id}/kilometraje:
    patch:
      tags:
        - Equipos
      summary: Actualiza el kilometraje de un equipo
      operationId: updateEquipoKilometraje
      parameters:
        - name: id
          in: path
          description: ID del equipo
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Datos del nuevo kilometraje
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipoUpdateKilometrajeRequest'
      responses:
        '200':
          description: Kilometraje del equipo actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipoResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/equipos:
    post:
      tags:
        - Equipos
      summary: Registra un nuevo equipo
      operationId: saveEquipo
      requestBody:
        description: Datos del nuevo equipo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipoNuevoRequest'
      responses:
        '201':
          description: Equipo creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipoResponse'
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Placa duplicada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/observaciones-equipo/equipo/{equipoId}:
    get:
      tags:
        - Observaciones
      summary: Obtiene todas las observaciones de un equipo
      operationId: getAllObservacionesByEquipoId
      parameters:
        - name: equipoId
          in: path
          description: ID del equipo
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de observaciones del equipo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservacionEquipoResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/observaciones-equipo:
    post:
      tags:
        - Observaciones
      summary: Registra una nueva observación de equipo
      operationId: saveObservacion
      requestBody:
        description: Datos de la nueva observación
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservacionEquipoRequest'
      responses:
        '201':
          description: Observación creada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservacionEquipoResponse'
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/observaciones-equipo/{id}:
    put:
      tags:
        - Observaciones
      summary: Actualiza una observación existente
      operationId: updateObservacion
      parameters:
        - name: id
          in: path
          description: ID de la observación
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Datos de la observación a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservacionEquipoRequest'
      responses:
        '200':
          description: Observación actualizada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservacionEquipoResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/observaciones-equipo/equipo/{equipoId}/estado/{estadoId}:
    patch:
      tags:
        - Observaciones
      summary: Actualiza el estado de todas las observaciones de un equipo
      operationId: updateEstadoObservacionesByEquipoId
      parameters:
        - name: equipoId
          in: path
          description: ID del equipo
          required: true
          schema:
            type: integer
            format: int32
        - name: estadoId
          in: path
          description: ID del nuevo estado
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Número de observaciones actualizadas
          content:
            application/json:
              schema:
                type: integer
                format: int32
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/empresas/tipos-equipos-total:
    get:
      tags:
        - Tipos de Equipos
      summary: Obtiene todos los tipos de equipos
      operationId: getAllTiposEquipo
      responses:
        '200':
          description: Lista de todos los tipos de equipos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoEquipoResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/empresas/{empresaId}/tipos-equipos-activos:
    get:
      tags:
        - Tipos de Equipos
      summary: Obtiene todos los tipos de equipos activos por empresa
      operationId: getTiposEquipoActivosByEmpresaId
      parameters:
        - name: empresaId
          in: path
          description: ID de la empresa
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de tipos de equipos activos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoEquipoResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /api/v1/tipos-equipos/{tipoEquipoId}/esquemas:
    get:
      tags:
        - Tipos de Equipos
      summary: Obtiene todos los esquemas por tipo de equipo
      operationId: getEsquemasByTipoEquipoId
      parameters:
        - name: tipoEquipoId
          in: path
          description: ID del tipo de equipo
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lista de esquemas de equipo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EsquemaEquipoResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

components:
  schemas:
    TipoObservacionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        ambito:
          type: string
        descripcion:
          type: string
        activo:
          type: boolean
      required:
        - id
        - nombre

    EstadoObservacionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        descripcion:
          type: string
      required:
        - id
        - nombre

    EstadoEquipoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        descripcion:
          type: string
      required:
        - id
        - nombre

    EquipoNuevoRequest:
      type: object
      properties:
        placa:
          type: string
        negocio:
          type: string
        tipoEquipoId:
          type: integer
          format: int32
        esquemaEquipoId:
          type: integer
          format: int32
        estadoId:
          type: integer
          format: int32
        empresaId:
          type: integer
          format: int32
      required:
        - placa
        - estadoId
        - empresaId

    EquipoUpdateRequest:
      type: object
      properties:
        placa:
          type: string
        negocio:
          type: string
        tipoEquipoId:
          type: integer
          format: int32
        esquemaEquipoId:
          type: integer
          format: int32
        estadoId:
          type: integer
          format: int32

    EquipoUpdateKilometrajeRequest:
      type: object
      properties:
        kilometrajeNuevo:
          type: integer
          format: int32
        usuarioId:
          type: integer
          format: int32
      required:
        - kilometrajeNuevo
        - usuarioId

    EquipoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        placa:
          type: string
        negocio:
          type: string
        tipoEquipoResponse:
          $ref: '#/components/schemas/TipoEquipoResponse'
        esquemaEquipoResponse:
          $ref: '#/components/schemas/EsquemaEquipoResponse'
        fechaInspeccion:
          type: string
          format: date
        kilometraje:
          type: integer
          format: int32
        fechaActualizacionKilometraje:
          type: string
          format: date
        estadoEquipoResponse:
          $ref: '#/components/schemas/EstadoEquipoResponse'
        empresaId:
          type: integer
          format: int32
      required:
        - id
        - placa
        - estadoEquipoResponse
        - empresaId

    ObservacionEquipoRequest:
      type: object
      properties:
        equipoId:
          type: integer
          format: int32
        fecha:
          type: string
          format: date-time
        tipoObservacionId:
          type: integer
          format: int32
        descripcion:
          type: string
        estadoId:
          type: integer
          format: int32
        fechaResolucion:
          type: string
          format: date-time
        comentarioResolucion:
          type: string
        usuarioResolucion:
          type: integer
          format: int32
        usuarioId:
          type: integer
          format: int32
      required:
        - equipoId
        - tipoObservacionId
        - estadoId

    ObservacionEquipoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        equipoId:
          type: integer
          format: int32
        fecha:
          type: string
          format: date-time
        TipoObservacionResponse:
          $ref: '#/components/schemas/TipoObservacionResponse'
        descripcion:
          type: string
        estadoObservacionResponse:
          $ref: '#/components/schemas/EstadoObservacionResponse'
        fechaResolucion:
          type: string
          format: date-time
        comentarioResolucion:
          type: string
        usuarioResolucion:
          type: integer
          format: int32
        usuarioId:
          type: integer
          format: int32
      required:
        - id
        - equipoId
        - fecha
        - TipoObservacionResponse
        - estadoObservacionResponse

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        path:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
        - code
        - message
        - timestamp
        - path

    TipoEquipoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        descripcion:
          type: string
      required:
        - id
        - nombre

    EsquemaEquipoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombreEsquema:
          type: string
        totalPosiciones:
          type: integer
          format: int32
      required:
        - id
        - nombreEsquema
        - totalPosiciones

  responses:
    ErrorResponse:
      description: Error en la operación
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFoundResponse:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'